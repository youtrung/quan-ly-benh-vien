/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import DAO.DAO_Profiles;
import DAO.DAO_Roles;
import MODEL.TableModeUserProfile;
import POJO.POJO_UserProfile;
import POJO.POJO_User;
import DAO.DAO_UserProfile;
import POJO.POJO_Tablespace;
import SqlServerProvider.SQLConnectThrowJDBC;
import SqlServerProvider.SQLProvider;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import sun.java2d.d3d.D3DRenderQueue;
/**
 *
 * @author rongt
 */
public class GUI_User extends javax.swing.JPanel {
    TableModeUserProfile tblModelView;
    DefaultListModel listModelPrivileges;
    DefaultListModel listModelTablespace;
    DefaultListModel listModelTemp;
    DefaultListModel listModelProfile;
    DefaultListModel listModelRoles;
    
    POJO_User u =new POJO_User();
    /**
     * Creates new form GUI_User
     */
    public GUI_User() {
        initComponents();
        initTableUser();
        pnPrile.setVisible(false);
        pnTablespace.setVisible(false);
        pnProfile.setVisible(false);
        pnRole.setVisible(false);
        
    }
    
         public void initTableUser() {
        tblModelView= new TableModeUserProfile();
        tblView.setModel(tblModelView);
        tblView.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()){
                        return;
                }
                int index=tblView.getSelectedRow();
                if (index <0){
                    return ;
                }
                POJO_UserProfile userpro=tblModelView.getByIndex(index);
                txtTenUser.setText(userpro.getUsername());
                
                
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        btnCreateUser = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTenUser = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMK = new javax.swing.JPasswordField();
        btnXoa = new javax.swing.JButton();
        rdTable = new javax.swing.JRadioButton();
        pnTablespace = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lsTablespace = new javax.swing.JList<>();
        rdListprivileges = new javax.swing.JRadioButton();
        pnPrile = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstPrivi = new javax.swing.JList<>();
        btnGrPri = new javax.swing.JButton();
        btnGraTbl = new javax.swing.JButton();
        rdProfile = new javax.swing.JRadioButton();
        pnProfile = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstProfile = new javax.swing.JList<>();
        btnRevoke = new javax.swing.JButton();
        btnGrandPro = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnQuota = new javax.swing.JTextField();
        cbDoituong = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        rdRoles = new javax.swing.JRadioButton();
        pnRole = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstRole = new javax.swing.JList<>();

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblView);

        btnCreateUser.setText("Tạo User");
        btnCreateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateUserActionPerformed(evt);
            }
        });

        jLabel1.setText("Username:");

        txtTenUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenUserActionPerformed(evt);
            }
        });
        txtTenUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTenUserKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTenUserKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTenUserKeyTyped(evt);
            }
        });

        jLabel2.setText("Password:");

        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        rdTable.setText("List Tablespace");
        rdTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdTableActionPerformed(evt);
            }
        });

        lsTablespace.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lsTablespace);

        javax.swing.GroupLayout pnTablespaceLayout = new javax.swing.GroupLayout(pnTablespace);
        pnTablespace.setLayout(pnTablespaceLayout);
        pnTablespaceLayout.setHorizontalGroup(
            pnTablespaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTablespaceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnTablespaceLayout.setVerticalGroup(
            pnTablespaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTablespaceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        rdListprivileges.setText("List Privileges");
        rdListprivileges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdListprivilegesActionPerformed(evt);
            }
        });

        lstPrivi.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(lstPrivi);

        javax.swing.GroupLayout pnPrileLayout = new javax.swing.GroupLayout(pnPrile);
        pnPrile.setLayout(pnPrileLayout);
        pnPrileLayout.setHorizontalGroup(
            pnPrileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        pnPrileLayout.setVerticalGroup(
            pnPrileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        btnGrPri.setText("Grant Privileges");
        btnGrPri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrPriActionPerformed(evt);
            }
        });

        btnGraTbl.setText("Alter Tablespace");
        btnGraTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraTblActionPerformed(evt);
            }
        });

        rdProfile.setText("List Profile");
        rdProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdProfileActionPerformed(evt);
            }
        });

        lstProfile.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(lstProfile);

        javax.swing.GroupLayout pnProfileLayout = new javax.swing.GroupLayout(pnProfile);
        pnProfile.setLayout(pnProfileLayout);
        pnProfileLayout.setHorizontalGroup(
            pnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnProfileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        pnProfileLayout.setVerticalGroup(
            pnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnProfileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        btnRevoke.setText("Revoke Privileges");
        btnRevoke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevokeActionPerformed(evt);
            }
        });

        btnGrandPro.setText("Alter Profile");
        btnGrandPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrandProActionPerformed(evt);
            }
        });

        jLabel3.setText("Quota :");

        cbDoituong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Worker", "Patient", "Boss", "Options" }));
        cbDoituong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDoituongActionPerformed(evt);
            }
        });

        jLabel4.setText("Đối tượng");

        rdRoles.setText("List Role");
        rdRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdRolesActionPerformed(evt);
            }
        });

        lstRole.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(lstRole);

        javax.swing.GroupLayout pnRoleLayout = new javax.swing.GroupLayout(pnRole);
        pnRole.setLayout(pnRoleLayout);
        pnRoleLayout.setHorizontalGroup(
            pnRoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRoleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnRoleLayout.setVerticalGroup(
            pnRoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRoleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreateUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenUser, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rdTable)
                            .addComponent(pnTablespace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnPrile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdListprivileges))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdProfile)
                            .addComponent(pnProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdRoles, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQuota, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbDoituong, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGrPri)
                    .addComponent(btnRevoke)
                    .addComponent(btnGraTbl))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGrandPro)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateUser)
                    .addComponent(jLabel1)
                    .addComponent(txtTenUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnQuota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDoituong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnXoa)
                    .addComponent(btnRevoke))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdTable)
                    .addComponent(rdListprivileges)
                    .addComponent(rdProfile)
                    .addComponent(rdRoles)
                    .addComponent(btnGrPri)
                    .addComponent(btnGrandPro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnPrile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnTablespace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGraTbl))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateUserActionPerformed
        // TODO add your handling code here:
        String name= txtTenUser.getText();
        String matkhau=txtMK.getText();
        
        POJO_UserProfile userp= new POJO_UserProfile();

        userp.setUsername(name);
        
        userp.setPassword(matkhau);
        if(name.length()<=0)
        {
            JOptionPane.showMessageDialog(this, "Tên User không được để trống!");
        }
        else 
        {
            
            try {
                DAO_UserProfile.addUser(name, matkhau,lstProfile.getSelectedValue(),lsTablespace.getSelectedValue(),btnQuota.getText());
                DAO_UserProfile.grantRoles(lstRole.getSelectedValue(),txtTenUser.getText());
                tblModelView.addElement(userp);
            } catch (SQLException ex) {
                Logger.getLogger(GUI_User.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnCreateUserActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int index=tblView.getSelectedRow();
        if(index<=0)
        {
            JOptionPane.showMessageDialog(this, "Hãy chọn trước khi xóa");
        }
        else
        {
            try {
                DAO_UserProfile.deleteUser(txtTenUser.getText());
                tblModelView = new TableModeUserProfile();
                tblView.setModel(tblModelView);
            } catch (SQLException ex) {
                Logger.getLogger(GUI_User.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void rdListprivilegesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdListprivilegesActionPerformed
        // TODO add your handling code here:
         if (rdListprivileges.isSelected())
        {
            initListPri();
            pnPrile.setVisible(true);
        }
        else 
            pnPrile.setVisible(false);
    }//GEN-LAST:event_rdListprivilegesActionPerformed

    private void btnGrPriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrPriActionPerformed
        // TODO add your handling code here:
        int index=lstPrivi.getSelectedIndex();
        if (index <0)
        {
            JOptionPane.showMessageDialog(null,"Bạn phải chọn quyền cần gán","Thông báo",JOptionPane.OK_CANCEL_OPTION);
            return ;
        }
        else
        {
            DAO_UserProfile daoU=new DAO_UserProfile();
            daoU.grantPrivileges(lstPrivi.getSelectedValue(),txtTenUser.getText());
            JOptionPane.showMessageDialog(null,"Gán thành công","Thông báo",JOptionPane.OK_CANCEL_OPTION);
            tblModelView = new TableModeUserProfile();
            tblView.setModel(tblModelView);
        }
    }//GEN-LAST:event_btnGrPriActionPerformed

    private void rdTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdTableActionPerformed
        if (rdTable.isSelected())
        {
            initLstTable();
            pnTablespace.setVisible(true);
        }
        else 
            pnTablespace.setVisible(false);
    }//GEN-LAST:event_rdTableActionPerformed

    private void btnGraTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraTblActionPerformed
        // TODO add your handling code here:
        int index=lsTablespace.getSelectedIndex();
        if (index <0)
        {
            JOptionPane.showMessageDialog(null,"Bạn phải chọn quyền cần gán","Thông báo",JOptionPane.OK_CANCEL_OPTION);
            return ;
        }
        else
        {
            DAO_UserProfile daoU=new DAO_UserProfile();
            daoU.grantTablespace(lsTablespace.getSelectedValue(),txtTenUser.getText());
            JOptionPane.showMessageDialog(null,"Gán thành công","Thông báo",JOptionPane.OK_CANCEL_OPTION);
            tblModelView = new TableModeUserProfile();
            tblView.setModel(tblModelView);
        }
        
    }//GEN-LAST:event_btnGraTblActionPerformed

    private void rdProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdProfileActionPerformed
        // TODO add your handling code here:
        if (rdProfile.isSelected())
        {
            initLstProfile();
            pnProfile.setVisible(true);
        }
        else 
            pnProfile.setVisible(false);
        
        
    }//GEN-LAST:event_rdProfileActionPerformed

    private void btnGrandProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrandProActionPerformed
        // TODO add your handling code here:
         int index=lstProfile.getSelectedIndex();
        if (index <0)
        {
            JOptionPane.showMessageDialog(null,"Bạn phải chọn quyền cần gán","Thông báo",JOptionPane.OK_CANCEL_OPTION);
            return ;
        }
        else
        {
            DAO_Profiles daoP=new DAO_Profiles();
            daoP.grantProfiles(txtTenUser.getText(),lstProfile.getSelectedValue());
            JOptionPane.showMessageDialog(null,"Gán thành công","Thông báo",JOptionPane.OK_CANCEL_OPTION);
            tblModelView = new TableModeUserProfile();
            tblView.setModel(tblModelView);
        }
    }//GEN-LAST:event_btnGrandProActionPerformed

    private void btnRevokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevokeActionPerformed
        // TODO add your handling code here:
        int index=lstPrivi.getSelectedIndex();
        if (index <0)
        {
            JOptionPane.showMessageDialog(null,"Bạn phải chọn quyền cần thu hồi","Thông báo",JOptionPane.OK_CANCEL_OPTION);
            return ;
        }
        DAO_Roles daoRo=new DAO_Roles();
        daoRo.revokePrivileges(lstPrivi.getSelectedValue(),txtTenUser.getText());
        JOptionPane.showMessageDialog(null,"SQL statement has been processed successfully","Confirm",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnRevokeActionPerformed

    private void cbDoituongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDoituongActionPerformed
        // TODO add your handling code here:
        rdTable.setSelected(false);
        pnPrile.setVisible(false);
        rdProfile.setSelected(false);
        pnProfile.setVisible(false);
        rdRoles.setSelected(false);
        pnRole.setVisible(false);
        rdListprivileges.setSelected(false);
        pnPrile.setVisible(false);
    }//GEN-LAST:event_cbDoituongActionPerformed

    private void rdRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdRolesActionPerformed
        // TODO add your handling code here:
        if (rdRoles.isSelected())
        {
            initLsRole();
            pnRole.setVisible(true);
        }
        else 
            pnRole.setVisible(false);
    }//GEN-LAST:event_rdRolesActionPerformed

    private void txtTenUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenUserActionPerformed
        // TODO add your handling code here:
         txtMK.setText(txtTenUser.getText());
    }//GEN-LAST:event_txtTenUserActionPerformed

    private void txtTenUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenUserKeyPressed
        // TODO add your handling code here:
         txtMK.setText(txtTenUser.getText());
       
    }//GEN-LAST:event_txtTenUserKeyPressed

    private void txtTenUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenUserKeyReleased
        // TODO add your handling code here:
        txtMK.setText(txtTenUser.getText());
    }//GEN-LAST:event_txtTenUserKeyReleased

    private void txtTenUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenUserKeyTyped
        // TODO add your handling code here:
         txtMK.setText(txtTenUser.getText());
    }//GEN-LAST:event_txtTenUserKeyTyped
    
    public void initLsRole()
    {
        try {
            // TODO add your handling code here:
            
            
            listModelRoles =new DefaultListModel();
            SQLConnectThrowJDBC provider=new SQLConnectThrowJDBC();
            provider.Open(u.getUsername(), u.getPassword(),u.getEnable(),u.getHost(),u.getPort(),u.getSid());
            String query="select role from dba_roles";
            String query1="select role from dba_roles where role like UPPER('%" +cbDoituong.getSelectedItem()+ "%')";
            // neu doi tuong la nhan vien thi dung cau lenh theo nv ko thi OPTION
            
            ResultSet rs;
            if(cbDoituong.getSelectedItem().equals("Options"))
            {
                rs=provider.executeQuery(query);
            }
            else 
                rs=provider.executeQuery(query1);
            while(rs.next())
            {
//                POJO_Tablespace data =  new POJO_Tablespace();
//                data.setName(rs.getString(1));
                listModelRoles.addElement(rs.getString(1));
            }
            lstRole.setModel(listModelRoles);
            provider.Close();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_User.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void initLstTable()
    {
        try {
            listModelTablespace=new DefaultListModel();
            SQLConnectThrowJDBC provider=new SQLConnectThrowJDBC();
            provider.Open(u.getUsername(), u.getPassword(),u.getEnable(),u.getHost(),u.getPort(),u.getSid());
            String query="select name from v$tablespace";
            String query1="select name from v$tablespace where name like UPPER('%" +cbDoituong.getSelectedItem()+ "%')";
            // neu doi tuong la nhan vien thi dung cau lenh theo nv ko thi OPTION
            
             ResultSet rs;
            if(cbDoituong.getSelectedItem().equals("Options"))
            {
                rs=provider.executeQuery(query);
            }
            else 
                rs=provider.executeQuery(query1);
            while(rs.next())
            {
//                POJO_Tablespace data =  new POJO_Tablespace();
//                data.setName(rs.getString(1));
                listModelTablespace.addElement(rs.getString(1));
            }
            lsTablespace.setModel(listModelTablespace);
            provider.Close();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_User.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
     public void initLstTablTemp()
    {
        try {
            listModelTemp=new DefaultListModel();
            SQLConnectThrowJDBC provider=new SQLConnectThrowJDBC();
            provider.Open(u.getUsername(), u.getPassword(),u.getEnable(),u.getHost(),u.getPort(),u.getSid());
            String query="select name from v$tablespace";
            ResultSet rs=provider.executeQuery(query);
            while(rs.next())
            {
//                POJO_Tablespace data =  new POJO_Tablespace();
//                data.setName(rs.getString(1));
                listModelTemp.addElement(rs.getString(1));
            }
            lsTablespace.setModel(listModelTemp);
            provider.Close();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_User.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void initListPri()
    {
        
        try {
             listModelPrivileges=new DefaultListModel();
            SQLConnectThrowJDBC provider=new SQLConnectThrowJDBC();
            provider.Open(u.getUsername(), u.getPassword(),u.getEnable(),u.getHost(),u.getPort(),u.getSid());
            String query="select privilege from user_sys_privs";
            ResultSet rs=provider.executeQuery(query);
            while(rs.next())
            {
                listModelPrivileges.addElement(rs.getString(1));
            }
            listModelPrivileges.addElement("Select");
            listModelPrivileges.addElement("Excute");
           
            provider.Close();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_User.class.getName()).log(Level.SEVERE, null, ex);
        }
        lstPrivi.setModel(listModelPrivileges);
    }
    public void initLstProfile()
    {
        try {
            listModelProfile=new DefaultListModel();
            SQLConnectThrowJDBC provider=new SQLConnectThrowJDBC();
            provider.Open(u.getUsername(), u.getPassword(),u.getEnable(),u.getHost(),u.getPort(),u.getSid());
            String query="select distinct profile from dba_profiles";
            String query1="select distinct profile from dba_profiles where profile like Upper('"+cbDoituong.getSelectedItem()+"')";
             ResultSet rs;
             if ( cbDoituong.getSelectedItem().equals("Options"))
             {
                 rs=provider.executeQuery(query);
             }
             else
                rs=provider.executeQuery(query1);
            while(rs.next())
            {
//                POJO_Tablespace data =  new POJO_Tablespace();
//                data.setName(rs.getString(1));
                listModelProfile.addElement(rs.getString(1));
            }
            lstProfile.setModel(listModelProfile);
            provider.Close();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_User.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateUser;
    private javax.swing.JButton btnGrPri;
    private javax.swing.JButton btnGraTbl;
    private javax.swing.JButton btnGrandPro;
    private javax.swing.JTextField btnQuota;
    private javax.swing.JButton btnRevoke;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbDoituong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> lsTablespace;
    private javax.swing.JList<String> lstPrivi;
    private javax.swing.JList<String> lstProfile;
    private javax.swing.JList<String> lstRole;
    private javax.swing.JPanel pnPrile;
    private javax.swing.JPanel pnProfile;
    private javax.swing.JPanel pnRole;
    private javax.swing.JPanel pnTablespace;
    private javax.swing.JRadioButton rdListprivileges;
    private javax.swing.JRadioButton rdProfile;
    private javax.swing.JRadioButton rdRoles;
    private javax.swing.JRadioButton rdTable;
    private javax.swing.JTable tblView;
    private javax.swing.JPasswordField txtMK;
    private javax.swing.JTextField txtTenUser;
    // End of variables declaration//GEN-END:variables
}
